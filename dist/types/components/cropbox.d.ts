import { ICropBoxConfig, ICropBoxPositionFunc, IDrawCropBoxFunc, IPosition, IVideoInfo } from "../types";
import ConstraintBox from "./constraintbox";
declare class CropBox {
    cropBoxElement: HTMLElement | null;
    private anchors;
    private grids;
    private boders;
    private pointerContainer;
    private gridContainer;
    private broderContainer;
    private rate;
    private zIndex;
    private constraintBox;
    private disengage;
    private drawCropbox;
    private cropBoxPositionFunc;
    private originalPosition;
    private previewPosition;
    private readonly position;
    private positionProxy;
    private constraintBoxPosition;
    private mapPosition;
    private videoInfo;
    private cropBoxConfig;
    constructor(videoInfo: IVideoInfo, cropBoxConfig?: ICropBoxConfig);
    setConstraintBox(constraintBox: ConstraintBox): void;
    borderMove(distanceX: number, distanceY: number, direction: 0 | 1 | 2 | 3): void;
    pointerMove(distanceX: number, distanceY: number, direction: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7): void;
    setOriginalPosition(): void;
    getOriginalPosition(): IPosition;
    private updateStyle;
    normalizePosition(position: IPosition): IPosition;
    setDrawCropBoxFunc(drawCropbox: IDrawCropBoxFunc): void;
    setCropBoxPositionFunc(cropBoxPositionFunc: ICropBoxPositionFunc): void;
    calculateBorderLimit(): void;
    private calculateAspectRatio;
    initCropbox(): void;
    initPointer(): void;
    initGrid(): void;
    initBorder(): void;
    cropboxMove(distanceX: number, distanceY: number): void;
    private borderLeftMove;
    private borderTopMove;
    private borderRightMove;
    private borderBottomMove;
    private cropboxScale;
    private updateMapPostion;
    setPreviewPosition(previewPositon: IPosition): void;
    show(flag: boolean): void;
    getPosition(): IPosition;
    setPosition(position: IPosition): void;
    getPreviewPosition(): IPosition;
}
export default CropBox;
